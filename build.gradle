group 'demo-spring-mybatis'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    mybatisGenerator
}

String springVersion = "4.2.5.RELEASE"

repositories {
    maven  {
        url "http://repo1.maven.org/maven2"
    }
}

dependencies {
    //maven仓库中心没有的jar，则放入libs目录下
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'org.springframework:spring-webmvc:4.+'
    compile 'org.springframework:spring-tx:4.+'
    compile 'org.springframework:spring-jdbc:4.+'
    compile 'org.springframework:spring-context-support:4.+'
    compile 'org.aspectj:aspectjweaver:+'
    compile 'com.google.guava:guava:+'
    compile 'mysql:mysql-connector-java:+'
    compile 'com.alibaba:druid:+'
    compile 'org.mybatis:mybatis:+'
    compile 'com.github.pagehelper:pagehelper:+'
    compile 'org.logback-extensions:logback-ext-spring:+'
    compile 'org.mybatis:mybatis-spring:+'
    compile 'ch.qos.logback:logback-classic:+'
    compile 'org.slf4j:jcl-over-slf4j:+'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'jstl:jstl:1.2'
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.36'
    mybatisGenerator 'tk.mybatis:mapper:3.3.1'
    testCompile group: 'junit', name: 'junit', version: '+'
}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/db-mysql-generate.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }

    properties;

}


task mybatisGenerate << {


    def properties = getDbProperties()



    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.user")
    ant.properties['password'] = properties.getProperty("jdbc.pass")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = this.modelPackage
    ant.properties['mapperPackage'] = this.mapperPackage
    ant.properties['sqlMapperPackage'] = this.sqlMapperPackage

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'db/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')

        }
    }
}
